# Generated by Django 5.2.1 on 2025-10-17 01:03

import django.db.models.deletion
import phonenumber_field.modelfields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='arsStaff_Details',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Staff_Name', models.CharField(blank=True, max_length=100, null=True)),
                ('Staff_Designation', models.CharField(blank=True, max_length=100, null=True)),
                ('Staff_Telnum', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region='PH')),
                ('Staff_EmailAdd', models.EmailField(blank=True, max_length=100, null=True)),
                ('Staff_License', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Batch_Table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bat_SiteCode', models.CharField(blank=True, default='', max_length=255)),
                ('bat_Site_Name', models.CharField(blank=True, max_length=255)),
                ('bat_Site_NameGen', models.CharField(blank=True, max_length=255)),
                ('bat_Batch_Name', models.CharField(blank=True, max_length=255)),
                ('bat_Batch_Code', models.CharField(blank=True, max_length=255)),
                ('bat_Date_of_Entry', models.DateTimeField(auto_now_add=True)),
                ('bat_RefNo', models.CharField(blank=True, null=True)),
                ('bat_BatchNo', models.CharField(blank=True, max_length=255)),
                ('bat_Total_batch', models.CharField(blank=True, max_length=100)),
                ('bat_AccessionNo', models.CharField(blank=True, max_length=255)),
                ('bat_AccessionNoGen', models.CharField(blank=True, max_length=100)),
                ('bat_Default_Year', models.DateField(blank=True, null=True)),
                ('bat_Referral_Date', models.DateField(blank=True, null=True)),
                ('bat_Status', models.CharField(choices=[('n/a', ''), ('Encoding', 'Encoding'), ('First Draft', '1st Draft'), ('Second Draft', '2nd Draft'), ('Third Draft', '3rd Draft'), ('Verification', 'Verification'), ('Other', 'Other')], default='', max_length=100)),
                ('bat_Encoder', models.CharField(blank=True, default='', max_length=255)),
                ('bat_Enc_Lic', models.CharField(blank=True, default='', max_length=100)),
                ('bat_Checker', models.CharField(blank=True, default='', max_length=255)),
                ('bat_Chec_Lic', models.CharField(blank=True, default='', max_length=100)),
                ('bat_Verifier', models.CharField(blank=True, default='', max_length=255)),
                ('bat_Ver_Lic', models.CharField(blank=True, default='', max_length=100)),
                ('bat_LabManager', models.CharField(blank=True, default='', max_length=255)),
                ('bat_Lab_Lic', models.CharField(blank=True, default='', max_length=100)),
                ('bat_Head', models.CharField(blank=True, default='', max_length=255)),
                ('bat_Head_Lic', models.CharField(blank=True, default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Breakpoint_upload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('File_uploadBP', models.FileField(blank=True, null=True, upload_to='uploads/breakpoints/')),
            ],
            options={
                'db_table': 'Breakpoint_upload',
            },
        ),
        migrations.CreateModel(
            name='BreakpointsTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Guidelines', models.CharField(blank=True, choices=[('CLSI', 'CLSI')], default='', max_length=100)),
                ('Test_Method', models.CharField(blank=True, choices=[('DISK', 'DISK'), ('MIC', 'MIC')], default='', max_length=20)),
                ('Potency', models.CharField(blank=True, default='', max_length=5)),
                ('Abx_code', models.CharField(blank=True, default='', max_length=15)),
                ('Tier', models.CharField(blank=True, default='', max_length=10)),
                ('Show', models.BooleanField(default=True)),
                ('Retest', models.BooleanField(default=False)),
                ('Antibiotic', models.CharField(blank=True, default='', max_length=100)),
                ('Whonet_Abx', models.CharField(blank=True, default='', max_length=100)),
                ('Disk_Abx', models.BooleanField(default=False)),
                ('R_val', models.CharField(blank=True, default='', max_length=30)),
                ('I_val', models.CharField(blank=True, default='', max_length=30)),
                ('SDD_val', models.CharField(blank=True, default='', max_length=30)),
                ('S_val', models.CharField(blank=True, default='', max_length=30)),
                ('Alert_val', models.CharField(blank=True, default='', max_length=30)),
                ('Date_Modified', models.DateField(auto_now_add=True)),
            ],
            options={
                'db_table': 'BreakpointsTable',
            },
        ),
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Reco_Code', models.CharField(blank=True, max_length=100, null=True)),
                ('Reco_Details', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReferredData_upload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ReferredDataFile', models.FileField(blank=True, null=True, upload_to='uploads/referred/')),
            ],
            options={
                'db_table': 'Referred_upload',
            },
        ),
        migrations.CreateModel(
            name='SiteCode_upload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('File_uploadSite', models.FileField(blank=True, null=True, upload_to='uploads/site/')),
            ],
            options={
                'db_table': 'SiteCode_upload',
            },
        ),
        migrations.CreateModel(
            name='SiteData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SiteCode', models.CharField(blank=True, max_length=3)),
                ('SiteName', models.CharField(blank=True, max_length=155)),
            ],
        ),
        migrations.CreateModel(
            name='SpecimenTypeModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Specimen_name', models.CharField(blank=True, max_length=100, null=True)),
                ('Specimen_code', models.CharField(blank=True, max_length=4, null=True)),
            ],
            options={
                'db_table': 'SpecimenTypeTable',
            },
        ),
        migrations.CreateModel(
            name='TATprocess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TAT_Process', models.CharField(blank=True, max_length=255)),
                ('Unit_code', models.CharField(blank=True, max_length=3)),
            ],
            options={
                'db_table': 'TATprocess',
            },
        ),
        migrations.CreateModel(
            name='TATUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to='uploads/TAT/')),
            ],
            options={
                'db_table': 'TATUpload',
            },
        ),
        migrations.CreateModel(
            name='Referred_Data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Hide', models.BooleanField(default=False)),
                ('Copy_data', models.BooleanField(default=False)),
                ('Batch_Name', models.CharField(blank=True, max_length=255)),
                ('Batch_Code', models.CharField(blank=True, max_length=255)),
                ('Date_of_Entry', models.DateTimeField(auto_now_add=True)),
                ('RefNo', models.CharField(blank=True, max_length=20, null=True)),
                ('BatchNo', models.CharField(blank=True, max_length=255)),
                ('Total_batch', models.CharField(blank=True, max_length=100)),
                ('AccessionNo', models.CharField(blank=True, max_length=255, unique=True)),
                ('AccessionNoGen', models.CharField(blank=True, max_length=100)),
                ('Default_Year', models.DateField(blank=True, null=True)),
                ('SiteCode', models.CharField(blank=True, max_length=255)),
                ('Site_Name', models.CharField(blank=True, max_length=255)),
                ('Referral_Date', models.DateField(blank=True, null=True)),
                ('Patient_ID', models.CharField(blank=True, max_length=255)),
                ('First_Name', models.CharField(blank=True, max_length=255)),
                ('Mid_Name', models.CharField(blank=True, max_length=255)),
                ('Last_Name', models.CharField(blank=True, max_length=255)),
                ('Date_Birth', models.DateField(blank=True, null=True)),
                ('Age', models.CharField(blank=True, max_length=255)),
                ('Age_Verification', models.CharField(blank=True, max_length=255)),
                ('Sex', models.CharField(blank=True, max_length=255)),
                ('Date_Admis', models.DateField(blank=True, null=True)),
                ('Nosocomial', models.CharField(choices=[('n/a', 'n/a'), ('Yes', 'Yes'), ('No', 'No')], default='n/a', max_length=255)),
                ('Diagnosis', models.CharField(blank=True, max_length=255)),
                ('Diagnosis_ICD10', models.CharField(blank=True, max_length=255)),
                ('Ward', models.CharField(blank=True, max_length=255)),
                ('Ward_Type', models.CharField(blank=True, max_length=255)),
                ('Service_Type', models.CharField(choices=[('n/a', 'n/a'), ('In', 'In'), ('Out', 'Out')], default='n/a', max_length=255)),
                ('Spec_Num', models.CharField(blank=True, max_length=255)),
                ('Spec_Date', models.DateField(blank=True, null=True)),
                ('Spec_Type', models.CharField(blank=True, max_length=255, null=True)),
                ('Reason', models.TextField(choices=[('n/a', 'n/a'), ('a & d', 'a & d'), ('confirmation of org and ast', 'a'), ('for ast only', 'b'), ('difficult to ID', 'c'), ('for serotyping', 'd'), ('for research', 'e'), ('Others', 'o')], default='n/a', max_length=255)),
                ('Growth', models.CharField(blank=True, max_length=255)),
                ('Urine_ColCt', models.CharField(blank=True, max_length=255)),
                ('ampC', models.CharField(choices=[('n/a', 'n/a'), ('(+)', '(+)'), ('(-)', '(-)'), ('NT', 'NT')], default='n/a', max_length=255)),
                ('ESBL', models.CharField(choices=[('n/a', 'n/a'), ('(+)', '(+)'), ('(-)', '(-)'), ('NT', 'NT')], default='n/a', max_length=255)),
                ('CARB', models.CharField(choices=[('n/a', 'n/a'), ('(+)', '(+)'), ('(-)', '(-)'), ('NT', 'NT')], default='n/a', max_length=255)),
                ('MBL', models.CharField(choices=[('n/a', 'n/a'), ('(+)', '(+)'), ('(-)', '(-)'), ('NT', 'NT')], default='n/a', max_length=255)),
                ('BL', models.CharField(choices=[('n/a', 'n/a'), ('(+)', '(+)'), ('(-)', '(-)'), ('NT', 'NT')], default='n/a', max_length=255)),
                ('MR', models.CharField(choices=[('n/a', 'n/a'), ('(+)', '(+)'), ('(-)', '(-)'), ('NT', 'NT')], default='n/a', max_length=255)),
                ('mecA', models.CharField(choices=[('n/a', 'n/a'), ('(+)', '(+)'), ('(-)', '(-)'), ('NT', 'NT')], default='n/a', max_length=255)),
                ('ICR', models.CharField(choices=[('n/a', 'n/a'), ('(+)', '(+)'), ('(-)', '(-)'), ('NT', 'NT')], default='n/a', max_length=255)),
                ('OtherResMech', models.CharField(blank=True, max_length=255)),
                ('Site_Pre', models.CharField(blank=True, max_length=255)),
                ('Site_Org', models.CharField(blank=True, max_length=255)),
                ('Site_Pos', models.CharField(blank=True, max_length=255)),
                ('OrganismCode', models.CharField(blank=True, max_length=255)),
                ('Comments', models.TextField(blank=True, null=True)),
                ('ars_ampC', models.CharField(choices=[('n/a', 'n/a'), ('(+)', '(+)'), ('(-)', '(-)'), ('NT', 'NT')], default='n/a', max_length=255)),
                ('ars_ESBL', models.CharField(choices=[('n/a', 'n/a'), ('(+)', '(+)'), ('(-)', '(-)'), ('NT', 'NT')], default='n/a', max_length=255)),
                ('ars_CARB', models.CharField(choices=[('n/a', 'n/a'), ('(+)', '(+)'), ('(-)', '(-)'), ('NT', 'NT')], default='n/a', max_length=255)),
                ('ars_ECIM', models.CharField(choices=[('n/a', 'n/a'), ('(+)', '(+)'), ('(-)', '(-)'), ('NT', 'NT')], default='n/a', max_length=255)),
                ('ars_MCIM', models.CharField(choices=[('n/a', 'n/a'), ('(+)', '(+)'), ('(-)', '(-)'), ('NT', 'NT')], default='n/a', max_length=255)),
                ('ars_EC_MCIM', models.CharField(choices=[('n/a', 'n/a'), ('(+)', '(+)'), ('(-)', '(-)'), ('NT', 'NT')], default='n/a', max_length=255)),
                ('ars_MBL', models.CharField(choices=[('n/a', 'n/a'), ('(+)', '(+)'), ('(-)', '(-)'), ('NT', 'NT')], default='n/a', max_length=255)),
                ('ars_BL', models.CharField(choices=[('n/a', 'n/a'), ('(+)', '(+)'), ('(-)', '(-)'), ('NT', 'NT')], default='n/a', max_length=255)),
                ('ars_MR', models.CharField(choices=[('n/a', 'n/a'), ('(+)', '(+)'), ('(-)', '(-)'), ('NT', 'NT')], default='n/a', max_length=255)),
                ('ars_mecA', models.CharField(choices=[('n/a', 'n/a'), ('(+)', '(+)'), ('(-)', '(-)'), ('NT', 'NT')], default='n/a', max_length=255)),
                ('ars_ICR', models.CharField(choices=[('n/a', 'n/a'), ('(+)', '(+)'), ('(-)', '(-)'), ('NT', 'NT')], default='n/a', max_length=255)),
                ('ars_Pre', models.CharField(blank=True, max_length=255)),
                ('ars_Post', models.CharField(blank=True, max_length=255)),
                ('ars_OrgCode', models.CharField(blank=True, max_length=255)),
                ('ars_OrgName', models.CharField(blank=True, max_length=255)),
                ('ars_ct_ctl', models.CharField(blank=True, max_length=255)),
                ('ars_tz_tzl', models.CharField(blank=True, max_length=255)),
                ('ars_cn_cni', models.CharField(blank=True, max_length=255)),
                ('ars_ip_ipi', models.CharField(blank=True, max_length=255)),
                ('ars_reco_Code', models.CharField(blank=True, max_length=255)),
                ('ars_reco', models.TextField(blank=True, null=True)),
                ('SiteName', models.CharField(blank=True, max_length=255)),
                ('Status', models.CharField(choices=[('n/a', 'n/a'), ('Encoding', 'Encoding'), ('First Draft', '1st Draft'), ('Second Draft', '2nd Draft'), ('Third Draft', '3rd Draft'), ('Verification', 'Verification'), ('Other', 'Other')], default='n/a', max_length=100)),
                ('Month_Date', models.DateField(blank=True, null=True)),
                ('Day_Date', models.DateField(blank=True, null=True)),
                ('Year_Date', models.DateField(blank=True, null=True)),
                ('RefDate', models.DateField(blank=True, null=True)),
                ('Start_AccNo', models.IntegerField(blank=True, null=True)),
                ('End_AccNo', models.IntegerField(blank=True, null=True)),
                ('No_Isolates', models.IntegerField(blank=True, null=True)),
                ('Concordance_Check', models.CharField(blank=True, max_length=255)),
                ('Concordance_by', models.CharField(blank=True, max_length=255)),
                ('Concordance_by_Initials', models.CharField(blank=True, max_length=255)),
                ('abx_code', models.CharField(blank=True, default='', max_length=25)),
                ('arsp_Encoder', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('arsp_Enc_Lic', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('arsp_Checker', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('arsp_Chec_Lic', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('arsp_Verifier', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('arsp_Ver_Lic', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('arsp_LabManager', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('arsp_Lab_Lic', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('arsp_Head', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('arsp_Head_Lic', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('Date_Accomplished_ARSP', models.DateField(blank=True, null=True)),
                ('x_mrse', models.CharField(blank=True, max_length=255)),
                ('x_mrsamrse', models.CharField(blank=True, max_length=255)),
                ('x_entbac', models.CharField(blank=True, max_length=255)),
                ('edta', models.CharField(blank=True, max_length=255)),
                ('Batch_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Batch_isolates', to='home.batch_table')),
            ],
            options={
                'db_table': 'Referred_Data',
            },
        ),
        migrations.CreateModel(
            name='AntibioticEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ab_AccessionNo', models.CharField(blank=True, max_length=100, null=True)),
                ('ab_RefNo', models.CharField(blank=True, max_length=100, null=True)),
                ('ab_Antibiotic', models.CharField(blank=True, max_length=100, null=True)),
                ('ab_Abx_code', models.CharField(blank=True, max_length=100, null=True)),
                ('ab_Abx', models.CharField(blank=True, max_length=100, null=True)),
                ('ab_Disk_value', models.IntegerField(blank=True, null=True)),
                ('ab_Disk_RIS', models.CharField(blank=True, max_length=4)),
                ('ab_Disk_enRIS', models.CharField(blank=True, default='', max_length=4)),
                ('ab_MIC_operand', models.CharField(blank=True, default='', max_length=4, null=True)),
                ('ab_MIC_value', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True)),
                ('ab_MIC_RIS', models.CharField(blank=True, max_length=4)),
                ('ab_MIC_enRIS', models.CharField(blank=True, default='', max_length=4)),
                ('ab_AlertMIC', models.BooleanField(default=False)),
                ('ab_Alert_val', models.CharField(blank=True, default='', max_length=30, null=True)),
                ('ab_R_breakpoint', models.CharField(blank=True, max_length=10, null=True)),
                ('ab_I_breakpoint', models.CharField(blank=True, max_length=10, null=True)),
                ('ab_SDD_breakpoint', models.CharField(blank=True, max_length=10, null=True)),
                ('ab_S_breakpoint', models.CharField(blank=True, max_length=10, null=True)),
                ('ab_Retest_Antibiotic', models.CharField(blank=True, max_length=100, null=True)),
                ('ab_Retest_Abx_code', models.CharField(blank=True, max_length=100, null=True)),
                ('ab_Retest_Abx', models.CharField(blank=True, max_length=100, null=True)),
                ('ab_Retest_DiskValue', models.IntegerField(blank=True, null=True)),
                ('ab_Retest_Disk_RIS', models.CharField(blank=True, max_length=4)),
                ('ab_Retest_Disk_enRIS', models.CharField(blank=True, default='', max_length=4)),
                ('ab_Retest_MIC_operand', models.CharField(blank=True, default='', max_length=4, null=True)),
                ('ab_Retest_MICValue', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True)),
                ('ab_Retest_MIC_RIS', models.CharField(blank=True, max_length=4)),
                ('ab_Retest_MIC_enRIS', models.CharField(blank=True, default='', max_length=4)),
                ('ab_Retest_AlertMIC', models.BooleanField(default=False)),
                ('ab_Retest_Alert_val', models.CharField(blank=True, default='', max_length=30, null=True)),
                ('ab_Ret_R_breakpoint', models.CharField(blank=True, max_length=10, null=True)),
                ('ab_Ret_I_breakpoint', models.CharField(blank=True, max_length=10, null=True)),
                ('ab_Ret_SDD_breakpoint', models.CharField(blank=True, max_length=10, null=True)),
                ('ab_Ret_S_breakpoint', models.CharField(blank=True, max_length=10, null=True)),
                ('ab_MICJoined', models.CharField(blank=True, max_length=7, null=True)),
                ('ab_breakpoints_id', models.ManyToManyField(max_length=6, to='home.breakpointstable')),
                ('ab_idNum_referred', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='antibiotic_entries', to='home.referred_data', to_field='AccessionNo')),
            ],
            options={
                'db_table': 'AntibioticEntry',
            },
        ),
        migrations.CreateModel(
            name='TATform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AccessionNum', models.CharField(blank=True, max_length=255)),
                ('Unit_DateRec', models.DateField(blank=True, null=True)),
                ('Target_Days', models.CharField(blank=True, max_length=3)),
                ('Days_Count', models.CharField(blank=True, max_length=3)),
                ('Running_TAT', models.CharField(blank=True, max_length=3)),
                ('Num_Isolate', models.CharField(blank=True, max_length=3)),
                ('Total_Batch', models.CharField(blank=True, max_length=3)),
                ('ars_Encoder', models.CharField(blank=True, max_length=255)),
                ('ars_Checker', models.CharField(blank=True, max_length=255)),
                ('ars_Verifier', models.CharField(blank=True, max_length=255)),
                ('ars_LabManager', models.CharField(blank=True, max_length=255)),
                ('ars_Head', models.CharField(blank=True, max_length=255)),
                ('Batch_Isolates', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tat_entries', to='home.referred_data')),
            ],
            options={
                'db_table': 'TATform',
            },
        ),
    ]
